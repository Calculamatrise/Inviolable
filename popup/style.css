@keyframes rotate {
	to {
		rotate: 360deg;
	}
}

::-webkit-scrollbar {
    height: 8px;
    width: 8px;
}

::-webkit-scrollbar-corner {
    display: none;
}

::-webkit-scrollbar-track {
    background-color: #0e111499;
    border-radius: 30px;
}

::-webkit-scrollbar-thumb {
    background-color: #232f38;
    border-radius: 30px;
}

::-webkit-scrollbar-thumb:hover {
    background-color: #303b44;
}

::-webkit-scrollbar-thumb:active {
    background-color: #3d4953;
}

:root {
    --accent-color: #161b1f;
    --background-color: #1d2328;
    --border-color: #1b526466;
    --text-color: #fdfdfd;
}

html {
    background-color: var(--background-color);
    color: var(--text-color);
}

body {
    padding: 0.25rem;
    width: 200px;
    transition: all .2s;
    overflow-y: auto;
    max-height: fit-content;
}

#state {
    color: rgba(255, 255, 255, 0.5);
    transition: all 200ms;
}

#state:hover {
    cursor: pointer;
}

#state::before {
    content: "Disabled";
}

#state:hover::before {
    content: "Click to enable";
}

#state, .danger {
    background-color: rgb(218, 34, 34, .2) !important;
}

#state.enabled, .safe {
    background-color: rgb(0, 167, 8, .2) !important;
}

#state.enabled::before {
    content: "Enabled";
}

#state.enabled:hover::before {
    content: "Click to disable";
}

#state:hover:active {
    backdrop-filter: brightness(0.5);
}

body > nav {
    border-bottom: 1px solid rgba(27, 82, 100, 0.4);
    font-family: roboto_medium, Arial, Helvetica, sans-serif;
    padding-bottom: 0.5rem;
    margin-bottom: 0.5rem;
}

button.tab, label.tab {
    -webkit-user-select: none;
    background-color: transparent;
    border: none;
    border-radius: 5px;
    color: rgba(44, 117, 141, 0.5);
    overflow: hidden;
    padding: 0.5rem 1rem;
    position: relative;
    text-align: center;
    text-transform: capitalize;
    user-select: none;
    width: -webkit-fill-available;
}

div[style="display: flex;"] > .tab.notification {
    padding-right: 2rem !important;
}

.notification::after {
    background-color: crimson;
    border-radius: 0.25rem;
    bottom: 0;
    color: #fbfbfb;
    content: "!";
    font-family: system-ui;
    font-size: 0.75rem;
    font-weight: 800;
    height: 1rem;
    margin: auto;
    max-height: -webkit-fill-available;
    opacity: 0.8;
    padding: 0 0.3rem;
    position: absolute;
    right: 0.4rem;
    top: 0;
}

section.tab {
    display: none;
    padding: 0.25rem;
    font-size: small;
    font-family: roboto_medium, Arial, Helvetica, sans-serif;
}

section.tab > input:is([type="checkbox"], [type="radio"]) {
    display: none;
}

section.tab:has(> input:is([type="checkbox"], [type="radio"]):checked) {
    display: block !important;
}

.disabled {
    -webkit-user-select: none;
    opacity: .5;
    pointer-events: none;
    user-select: none;
}

button, label {
    background-color: #ffffff00;
    border: none;
    border-radius: 8px;
    color: #1b5264;
    display: block;
    overflow: hidden;
    padding: 0.5rem 1rem;
    position: relative;
    user-select: none;
    -webkit-user-select: none;
}

label > * {
    vertical-align: middle;
}

label input:is([type="checkbox"], [type="color"], [type="radio"]):first-child {
    margin: 0;
    margin-right: 0.5rem;
    vertical-align: middle;
}

label:hover, button:hover, .keybind:hover {
    backdrop-filter: brightness(0.8);
    /* background:rgba(0, 0, 0, .2); */
    cursor: pointer;
}

label input:not(.override-pointer-events):not(input[type="text"]) {
    pointer-events: none;
    touch-action: none;
}

label input:is([type="checkbox"], [type="radio"]) {
    rotate: 90deg;
    scale: 0.85;
    transition: all .2s;
}

label input:is([type="checkbox"], [type="radio"]):checked {
    rotate: none;
    scale: none;
    transition: all .2s;
}

label input[type="color"]::-webkit-textfield-decoration-container {
    -webkit-appearance: none;
    appearance: none;
}

label input[type="color"] {
    -webkit-appearance: none;
    appearance: none;
    border: initial;
    box-sizing: border-box;
    border-radius: 2px;
    height: 13px;
    overflow: hidden;
    padding: initial;
    position: relative;
    visibility: hidden;
    width: 13px;
}

label input[type="color"]::after {
    background-color: inherit;
    bottom: 0;
    content: "";
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    /* visibility: visible; */
}

input:is([type="email"], [type="password"], [type="text"]) {
    background-color: #232f38;
    color: #ffffff;
    border: none;
    border-radius: 0.2rem;
    padding: 0.25rem 0.5rem;
}

input[type="email"]:focus {
    outline-style: auto !important;
}

input[type="email"]:focus:invalid {
    outline: red;
}

input[type="email"]:focus:valid {
    outline: green;
}

table tr > * {
    padding: 0.25rem;
}

table tbody tr td {
    border-radius: 0.36rem;
    text-transform: capitalize;
}

.keybind:focus {
    -webkit-user-select: none;
    box-shadow: inset 0 0 1px 1px #39637180;
    color: transparent;
    user-select: none;
}

.keybind:focus::before {
    content: "Recording...";
    color: white;
    position: absolute;
}

.keybind:empty::before {
    content: "Not set";
}

section.tab:has(> #keybinds) table tbody tr td:nth-child(1) {
    color: #808080dd;
}

:is([data-shift-key] .keybind, section.tab:has(> #keybinds) table tbody tr td:nth-child(1)):hover {
    background-color: rgb(218, 34, 34, .2);
    color: transparent;
}

:is([data-shift-key] .keybind, section.tab:has(> #keybinds) table tbody tr td:nth-child(1)):hover::before {
    color: #ffffff80;
    content: "Clear";
    position: absolute;
}

.keybind::before {
    content: attr(id);
    text-transform: capitalize;
}

.dropdown {
    position: relative;
    transition: all 10s;
}

.dropdown:empty {
  display: none;
}

.dropdown > main {
  background-color: var(--accent-color);
  box-shadow: 0 0 20px -10px var(--border-color);
  display: block;
  flex-direction: column;
  max-height: 0;
  overflow-y: auto;
  position: absolute;
  z-index: 1;
}

.dropdown:is(:hover, :focus-within) > main {
  height: auto;
  max-height: 100vh;
  border-radius: 5px;
  transition: max-height .25s ease-in;
}

.dropdown:is(:hover, :focus-within) > * {
    outline: none;
}

.dropdown > main > * {
    padding: 0.5rem !important;
    text-align: left;
}

.dropdown > main > * > * {
    vertical-align: middle;
}

.dropdown > main > * > img {
    height: 2rem;
    margin-right: 0.4rem;
    object-fit: cover;
    width: 2rem;
}

button.loading {
    box-shadow: inset 0 0 1px 2px rgba(0, 0, 0, .2) !important;
}

.loading {
    -webkit-user-select: none;
    color: transparent !important;
    opacity: 0.5;
    pointer-events: none;
    position: relative;
    transition: box-shadow 240ms;
    user-select: none;
}

.loading * {
    visibility: hidden;
}

.loading::after {
    animation: rotate 800ms cubic-bezier(.5, .5, .5, .5) infinite;
    background-color: transparent;
    border: 2px solid;
    border-color: white !important;
    border-bottom-color: transparent !important;
    border-radius: 50%;
    bottom: 0;
    content: "";
    height: 0;
    left: 0;
    margin: auto;
    padding: 0.25rem;
    position: absolute;
    right: 0;
    top: 0;
    width: 0;
}

.ripple {
    overflow: hidden;
}

.ripple::before {
    background-color: black;
    border-radius: 50%;
    content: "";
	left: calc(var(--offsetX) * 1px);
    opacity: 0;
    padding: 50%;
    pointer-events: none;
	position: absolute;
    scale: 2;
    top: calc(var(--offsetY) * 1px);
    translate: -50% -50%;
	transition: translate 800ms ease-out, scale 800ms, opacity 1s;
}

/* .ripple:not(.focus):active::before, .ripple.focus:not(:focus-within):active::before */
.ripple:is(:not(.focus), .focus:not(:focus-within)):active::before {
    opacity: .5;
    scale: 0;
    transition: 0s;
    translate: -50% -50%;
}